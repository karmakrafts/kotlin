Annotations from the list below require AST loading to calculate arguments.
It is expected for invalid code, but valid arguments should be calculated via stubs for performance reasons.
See KT-71787 for reference.

context -> FirConstructorSymbol util/MyClassWithoutConstructor.MyClassWithoutConstructor
@Anno(LAZY_EXPRESSION)

context -> FirConstructorSymbol util/MyClassWithoutConstructor.MyClassWithoutConstructor
@Anno(LAZY_EXPRESSION)

context -> FirConstructorSymbol util/MyClassWithoutConstructor.MyClassWithoutConstructor
@Anno(LAZY_EXPRESSION)

context -> FirConstructorSymbol util/MyClassWithoutConstructor.MyClassWithoutConstructor
@Anno(LAZY_EXPRESSION)

context -> FirConstructorSymbol util/MyClassWithoutConstructor.MyClassWithoutConstructor
@Anno(LAZY_EXPRESSION)

context -> FirConstructorSymbol util/MyClassWithoutConstructor.MyClassWithoutConstructor
@Anno(LAZY_EXPRESSION)

context -> FirRegularClassSymbol util/MyClassWithoutConstructor
@Anno(LAZY_EXPRESSION)

context -> FirRegularClassSymbol util/MyClassWithoutConstructor
@Anno(LAZY_EXPRESSION)

context -> FirRegularClassSymbol util/MyClassWithoutConstructor
@Anno(LAZY_EXPRESSION)

context -> FirConstructorSymbol util/MyClassWithConstructor.MyClassWithConstructor
@Anno(LAZY_EXPRESSION)

context -> FirConstructorSymbol util/MyClassWithConstructor.MyClassWithConstructor
@Anno(LAZY_EXPRESSION)

context -> FirConstructorSymbol util/MyClassWithConstructor.MyClassWithConstructor
@Anno(LAZY_EXPRESSION)

context -> FirConstructorSymbol util/MyClassWithConstructor.MyClassWithConstructor
@Anno(LAZY_EXPRESSION)

context -> FirConstructorSymbol util/MyClassWithConstructor.MyClassWithConstructor
@Anno(LAZY_EXPRESSION)

context -> FirConstructorSymbol util/MyClassWithConstructor.MyClassWithConstructor
@Anno(LAZY_EXPRESSION)

context -> FirRegularClassSymbol util/MyClassWithConstructor
@Anno(LAZY_EXPRESSION)

context -> FirRegularClassSymbol util/MyClassWithConstructor
@Anno(LAZY_EXPRESSION)

context -> FirRegularClassSymbol util/MyClassWithConstructor
@Anno(LAZY_EXPRESSION)
